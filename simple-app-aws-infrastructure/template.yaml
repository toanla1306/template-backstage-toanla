apiVersion: scaffolder.backstage.io/v1beta2
kind: Template
metadata:
  name: simple-app-aws-infrastructure
  title: Create Application in AWS
  description: Create a New App in AWS
  tags:
    - python
    - terraform
    - aws
spec:
  owner: ldtoan1306@gmail.com
  type: service
  parameters:
    - title: Provide some simple information
      required:
        - application_name
        - author
      properties:
        application_name:
          title: Name
          type: string
          description: Unique name of the application
          ui:field: EntityNamePicker
        description:
          title: Description
          type: string
          description: Help others understand what this application is for.
        author:
          title: Author
          type: string
          description: Author of the application
          # ui:field: OwnerPicker
          # ui:options:
          #   allowedKinds:
          #     - Group
        authorEmail:
          title: Author Email
          type: string
          description: Author's email of the application
    - title: Choose a location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com
  steps:
    - id: template
      name: Fetch Skeleton + Template
      action: fetch:cookiecutter
      input:
        url: ./template
        copyWithoutRender:
          - .github/workflows/*
        values:
          application_name: ${{ parameters.application_name }}
          description: ${{ parameters.description }}
          destination: ${{ parameters.repoUrl | parseRepoUrl }}
          author: ${{ parameters.author }}
          authorEmail: ${{ parameters.authorEmail }}

    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts:
          - github.com
        description: This is ${{ parameters.application_name }}
        repoUrl: ${{ parameters.repoUrl }}

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: "/catalog-info.yaml"

  output:
    links:
      - title: Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}
